WeldingDigitalTwinAI/
├── .gitattributes
├── .gitignore
├── README.md           # Project overview
├── requirements.txt    # Python dependencies
├── setup.py            # (Optional) For packaging the project
├── src/
│   ├── __init__.py     # Makes src/ a Python package
│   ├── config.py       # System configuration
│   ├── data_handler.py # Historical data loading/preprocessing for training (existing)
│   ├── sensor_data_handler.py # Real-time data collection/processing (NEW)
│   ├── ai_model.py     # AI model architecture (existing)
│   ├── trainer.py      # AI model training logic (existing)
│   ├── predictor.py    # Base prediction logic (existing, may be refactored/enhanced)
│   ├── ai_inference_engine.py # Real-time AI inference (NEW/Enhancement of predictor)
│   ├── evaluator.py    # Basic quality evaluation (existing)
│   ├── quality_evaluator_adaptive_control.py # Advanced evaluation and control (NEW/Enhancement of evaluator)
│   ├── physics_interface.py # UE simulator interface (existing, needs implementation)
│   ├── robot_control_interface.py # Robot communication (NEW)
│   ├── welding_process_manager.py # Process coordination (NEW)
│   ├── data_logger_db.py # Database interface (NEW)
│   ├── system_manager.py # Overall system manager (NEW)
│   └── main.py         # System entry point (may be simpler, launching system_manager)
├── data/
│   ├── dummy_sensor_data.csv # Example sensor data
│   ├── dummy_labels.csv      # Example label data (Note: Rename these to align with content)
│   └── images/             # Image data directory
├── models/
│   └── welding_model.pth   # Trained model file (needs to be generated by trainer.py)
│   └── scaler.pkl          # Trained scaler object file (NEW - needs to be saved/loaded)
├── docs/               # Documentation
├── tests/              # Test code
└── hmi_application/    # User interface files (if included in this repo)